{
  "id": 1350,
  "url": "www.dofactory.com/topic/1350/correcting-code-smells-with-design-patterns.aspx",
  "title": "Correcting Code Smells with Design Patterns?",
  "ques": "I think I understand what a code smell is (don\u0027t you love that term? -- reminds me of fish for some reason).\r\n\r\nHere is what Wikipedia has to say about these smells:\r\n\r\nA code smell is any symptom in the source code of a program that possibly indicates a deeper problem. \r\nOften the deeper problem hinted by a code smell can be uncovered when the code is subjected to a short feedback cycle where it is refactored in small, controlled steps, and the resulting design is examined to see if there are any further code smells that indicate the need of more refactoring. From the point of view of a programmer charged with performing refactoring, code smells are heuristics to indicate when to refactor, and what specific refactoring techniques to use. Thus, a code smell is a driver for refactoring.\r\n\r\nSo, then it comes to refactoring.  Here is what Wikipedia has to say about refactorings:\r\n\r\nCode refactoring is a disciplined way to restructure code, undertaken in order to improve some of the nonfunctional attributes of the software. Typically, this is done by applying series of refactorings, each of which is a (usually) tiny change in a computer program\u0027s source code that does not modify its functional requirements.\r\n\r\nWhat I am not clear about is what role Design Patterns are playing in these refactoring. I have heard of Refactoring Patterns, but how do they relate to the GoF patterns and say the MVC, MVP, MVVC family of patterns?  Is there a place for these patterns in refactoring the code smells?\r\n\r\nThanks for your thoughts and feedback.",
  "answers": [
    {
      "ansID": 1488,
      "ans": "There is no direct relation of Refactoring patters (RF) with GOF Design Patterns (GoF).  In general correct usage of GoF design patterns may to some extent reduce the code smell (overuse may have the side effect).\r\n\r\nBut Refactoring  patterns are more at a basic level like\r\n\r\n- Extract interface\r\n- Extract Parameters\r\n- Encapsulate Field\r\n- Replace constructor with Factory Method (GoF Factory Method)\r\n- Replace Magic Number with Symbolic Constant\r\n- Rename Method\r\n- Substitute Algorithm (GoF Strategy)\r\n- AND MANY MORE.....\r\n\r\nAdhering to basic GoF and related patterns like MVC, MVP etc follows some of the above high level objectives, but refactoring includes lots of low level code activity as well as can be gauged from the above list.\r\n\r\nHope this helps."
    }
  ]
}
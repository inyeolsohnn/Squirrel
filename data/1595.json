{
  "id": 1595,
  "url": "www.dofactory.com/topic/1595/which-pattern-should-i-use.aspx",
  "title": "Which pattern should I use?",
  "ques": "\r\n\r\n\r\nHi All,\r\n\r\n\r\nHere?s the requirement; \r\n\r\n\r\n?Make this product available for ordering to clients of (category\r\n1) or (of age over 24 and not in region A)?\r\n\r\n\r\nThe above seems like a SQL query, but it really is not. Ok!\r\nmaybe it is. In reality it?s a DSL that will act as a filtering engine.  Here?s the thing, I have a catalogue of\r\nproducts that I want to make available to specific clients. Much like we see in\r\npricing rules in e-commerce platforms I would like to give the end user capabilities\r\nof creating these rules.  So the final\r\nresult should be a dynamic catalogue displaying exactly what I tell it to\r\ndisplay depending on the user.\r\n\r\n\r\nIt really is like an e-commerce up sale, cross sale except\r\nthat it?s the end user that creates these rules, not the actual sales.\r\n\r\n\r\nNormally I would pull together some ?if else? statements and\r\nencapsulate it into a class and voila. But then I remembered that my client not\r\nonly uses these kind of rules to limit what kind of product can be available to\r\nwhom, I also discovered that in a different modules he uses a messaging system\r\nthat are sent using exactly the same rules. So we can easily transform the\r\nabove DSL into something like this:\r\n\r\n\r\n?Send a message to clients of (category 1) or (of age over\r\n24 and not in region A)?\r\n\r\n\r\nSo I decided to write something reusable that will be used\r\non the application level rather than module level.\r\n\r\n\r\nA year ago I decided to invest more into learning design\r\npatterns, so my mind is eager to use more design patterns to solve my problems,\r\nfully aware that design patterns can be more like a thorn in the side if not\r\nused properly, however I also became aware of their capabilities. And something\r\nis telling me that Design pattern is the way to go in this case.\r\n\r\n\r\nI have been trying to find the suitable pattern for this\r\nparticular problem and I think I narrowed it down to GoF Interpreter pattern.\r\nOther suggested that I use WF but I?m leaning more that the GoF pattern.\r\n\r\n\r\nNow the real problem comes; even if I know what the problem\r\nis, and what pattern I should be using to solve it, I still have no clue where\r\nto begin and how to code it! I could not find a decent example on the web to\r\nbase myself on it.\r\n\r\n\r\nI am hoping that the members of this forum can point me in\r\nthe right direction, since I?m fairly new to design patterns. \r\n\r\n\r\nAlthough I?m pretty sure that the Interpreter pattern is the\r\nsuitable one, but I would be more that grateful if you think that there are\r\nbetter approaches. \r\n\r\n\r\n \r\n\r\n\r\nRegards.\r\n\r\n",
  "answers": [
    {
      "ansID": 1783,
      "ans": "Great question..  As usual with patterns, there are always more than one pattern that may seem to solve a specific case (definitely each has it own intent).\r\n\r\nPrior to applying any patterns, the  first thing you can do is abstracting away things  that change (which I think you already did some analysis on).\r\n\r\nFrom the GoF... the intent of interpreter is \r\n \u0027Given a language, define a representation for its grammar along with an interpreter that uses the representation to interpret sentences in the language. \u0027\r\n\r\nTake this requirement for e.g.   \r\n\r\n \u0027 I have a catalogue of products that I want to make available to specific clients.  \u0027  \r\nThe above is one of your business requirement or rule which relates to how your catalog of products is constructed and may be while constructing different rules may apply..\r\n\r\nThis may indicate you need to analyze creation pattern like \u0027builder \u0027....\r\nGo4....\r\ndefinition\r\n\r\n\r\n\r\n\r\nSeparate the construction of a complex object from its representation so that the same construction process can create different representations. \r\n\r\nThe above is just an example.. Check the intent of the pattern with the problem you are trying to solve and then nail down the closes patterns to see which fits the best...\r\n\r\nSince the scenario is more to do with business rules, which may change based on some criteria you may also look at  \u0027Strategy \u0027 and  \u0027Decorator \u0027 as well...\r\n\r\nBut the most important is first apply the SOLID principles which you may already be doing, and then further nail down 2/3 patterns which may best solve your problem at hand...\r\n\r\nAlso, think through the overall complexity of introducing more patterns than required.\r\n\r\nAll the very best for your work.\r\n"
    }
  ]
}
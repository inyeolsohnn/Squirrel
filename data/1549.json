{
  "id": 1549,
  "url": "www.dofactory.com/topic/1549/what-pattern-to-use.aspx",
  "title": "What pattern to use?",
  "ques": "Hi,\r\n\r\nI\u0027m studying pattern and i want implement a class that build Charts.\r\n\r\nIn my case, charts could be made by legend, a description and a graphical representation(bar chart, line chart, pie chart). But I could create a chart without a legend, or without a description. So i have some variations to create the chart.\r\n\r\nWhat pattern is better in these case ? I try the builder pattern but i cant make a concret class for all the combination that i have.\r\n\r\nSorry for the bad english. \r\n\r\nI need some help, please.\r\n\r\nThanks,\r\n\r\nFilipe\r\n\r\n\r\n",
  "answers": [
    {
      "ansID": 1724,
      "ans": "Some indirect inputs that may be useful\n\n\nBasically a chart is composed of\n -  An X- axis\n -  A Y- axis\n -  Or No Axis (Pie chart and others)\n -   Has a Title\n -   Has Legends\n -   Different renderings (bar, column, pie, candle-stick etc).\n -   Has model or data to bind to\n -   et el\n\nIf you analyze this you may observe that the only changing part in this is the rendering, i.e. a line chart, a pie chart etc rest other things are composable or in other words you may thing it this way...\n\nA chart  has\n-   a data to bind to\n-   Render as\n\nAnd is decorated with a \n- Title\n- Axis\n- Legends \netc.\n\n\nSo, you can create various decorators for these elements and compose your main chart with these decorators at runtime and as and when required.\n\nApproach 1 - Decorator pattern\n\nThe higher level API could be something like this\n\n// Create a chart with legends\nChart lineChart \u003d new LineChart();\nln.DataSource \u003d   \u0027Your datasource here \u0027;\nlineChart.Render();   // Renders the linechart without legend\n\nLegendsChart  ln \u003d new LegendsChart(lineChart);\n\nln.Render();   // Renders the line chart with legends as well\n\nRefer Decorator patterns here  http://www.dofactory.com/Patterns/PatternDecorator.aspx\nYou can add more decorators as needed without modifying your existing code\n\n\nApproach 2 - Fluent API\nIt will look something like this\nChart lineChart  \u003d new Linechart().ShowLegend();\nlinChartDataSource \u003d  \u0027Your datasource here \u0027;\nlineChart.Render();\n\nlineChart.AddBorder();\nlineChart.Render();\n\nA good example of fluent interface can be found here.. http://weblogs.asp.net/jgalloway/archive/2006/12/06/a-simple-example-of-a-fluent-interface.aspx\n\n\n\nNOTE:  This is just couple of  approaches, you an find numerous other approaches as well\n "
    }
  ]
}
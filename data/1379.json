{
  "id": 1379,
  "url": "www.dofactory.com/topic/1379/best-practice-store-images-in-db-or-on-file-system.aspx",
  "title": "Best practice: Store images in DB or on File System?",
  "ques": "We are building an ASP.NET MVC web application where users continually upload images -- several hundreds per day. The images are somewhere between 200 - 800K.  \r\n\r\nThe two alternatives, as I see it, is to store the images in the DB (SQL Server) or on the File System.  One of the most important issues is performance, for which the File System seems to be the better choise.  However, storing images on the File System makes Backup/Restore far much more complicated (and possibly risky).\r\n\r\nAre there any Guiding Principles or Best Practices out there as to what is the best approach?  Do you wish to share any experiences you have in this area?  Finally, if there are alternatives to DB vs File System, I would also like to hear this.\r\n\r\nThanks and best regards.",
  "answers": [
    {
      "ansID": 1542,
      "ans": "This is always a debatable topic, and the answer would depend on your specific circumstances.  If performance is your criteria and these images could be edited in future, then storing it on filesystem is a better option.\r\n\r\nBut then backup and other things are not that seamless and easy as you have already highlighted..  If you have good infrastracture around support activities then this may not be that big an issue.\r\n\r\nBut if security if of utmost importance, then DB could be a good option though.  You may need to implement caching in this case to optimize loading of frequently used images though.\r\n\r\nRelated to this I am also looking at NAS for storing images (but haven\u0027t yet started the full evaluation yet).\r\n\r\nThere is an opensource  NAS available at \r\nhttp://freenas.org/FreeNAS\r\n\r\nMore about NAS at\r\nhttp://en.wikipedia.org/wiki/Network-attached_storage\r\n\r\nBut as of today I will go with file system for images.\r\n\r\nDo share your thoughts as well.  Thanks."
    },
    {
      "ansID": 1543,
      "ans": "If you are going to store a large amount of images, file system (FS), is probably the best route to choose from. This is what I have seen/read that most people use. Many also seem to favor saving the file path (and meta data) in the DB and the file itself on the FS.\r\n\r\nI have heard that many people have had issues (locking, backup) with saving large/many files onto DB, and many that originally set up to use DB as storage, eventually changed to FS.\r\n\r\nAs with any decisions, there are trade offs. Putting the files in a DB will probably make it easier for you to access, than if on a FS. Also you don\u0027t require an additional backup strategy if you go for DB only. If transactional integrity is important, you might want to consider putting it in DB.\r\n\r\nYou might also be intereseted in the filestream datatype (new in SQL Server 2008). I don\u0027t know much about it, but it might be worth checking out.\r\n\r\n\r\nGood Luck!\r\n"
    },
    {
      "ansID": 1546,
      "ans": "Greetings, Tim.\r\n\r\nI have some experience storing documents in SQL Server 2008 usng FileStreaming.  It takes a bit of configuring, and the code is a bit different than regular SQL, but it works well.   Having both the ability to use streaming to read and write to the files and having the transaction support of SQL Server is great!\r\n\r\nIf you can use Sql Server 2008 R2, consider that.   If you wish to use Snapshot Isolation AND FileStreaming on the same database, it\u0027s only supported in this version.\r\n\r\nWe are preparing to put this into production.\r\n\r\nOne disadvantage of this approach is that while the files are externally accessible, you still have to query SQL to get the information to access them, so you can\u0027t just have the file server serve the images directly.\r\n\r\nThere\u0027s another project I \u0027m involved in, that will be solely images...  The number of images, and sizing of the system are such, that putting them into SQL Server isn\u0027t really an option.  On top of that, we are building this in the  \u0027cloud \u0027, using Windows Azure.   SQL Azure doesn\u0027t have support for file streaming as of yet.\r\n\r\nGood luck to you.        "
    }
  ]
}